<style>
	.demo{
		border:1px solid #ccc;
		/* display content vertically, with flex box */
		display: -webkit-box; 
		-webkit-box-align: center;
		display: -moz-box; 
		-moz-box-align: center;
		display: -ms-box; 
		-ms-box-align: center;
		display: box; 
		box-align: center;
	}
	.demo video{
		-webkit-box-flex:1.0;
		-moz-box-flex:1.0;
		box-flex:2.0;
		border:1px solid #eee;
		display: block;
		padding:3px;
		max-height:200px;
	}
	form.msg input,form.msg textarea{
		width:100%;
		background-color: #eee;
		border:1px solid #ccc;
		padding:4px;
	}
</style>
<body>
<header>
<h1>PeerJS - WebRTC video chat</h1>
</header>

<blockquote>
PeerJS is a service which makes it easier to build a chat room using the <strike>upcoming</strike> <em>present</em> <a href="http://www.w3.org/TR/webrtc/">WebRTC's PeerConnection API</a>. The PeerConnection API proposes to be able to send data, video etc from one user-agent to another without the need for it going through a server. PeerJS handles this handshake with a simple Socket.IO backend server.
</blockquote>


<form class="msg">
<div class="demo">
<video id="myvideo"></video>
</div>
<input type="text" name="input" placeholder="message"/>
<textarea name="textarea"></textarea>
</form>

<aside>Share chatroom link <a id="chat-room-link" target="_blank"></a></aside>

<div ng-app="Whiteboard" ng-controller="BaseCtrl">
    <h1>Whiteboard</h1><br><br>
    <h2>Have a question?  Input it below.</h2>
    <form>
    	<input type="text" name="text" id="question"><br>
    	<input type="submit" id="submit">
    </form>
    <h3>Questions asked:</h3>
    <ul>
        <li ng-repeat="question in questions">
            <span>{{question.text}}</span>
        </li>
    </ul>
</div>

